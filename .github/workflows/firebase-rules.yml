name: Firestore Rules CI

on:
  push:
    branches: [ main ]
    paths:
      - 'firestore.rules'
      - 'firebase.json'
  pull_request:
    branches: [ main ]
    paths:
      - 'firestore.rules'
      - 'firebase.json'

jobs:
  validate:
    name: Validate rules on PRs
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Install Firebase CLI
        run: npm i -g firebase-tools@13
      - name: Ensure Java (for emulator)
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
      - name: Compile rules via emulator
        env:
          FIREBASE_AUTH_EMULATOR_HOST: localhost:9099
          FIRESTORE_EMULATOR_HOST: localhost:8080
        run: |
          # Start only Firestore emulator to validate rules load; exits after command
          # Uses default project from .firebaserc (demo-trr); no secrets required
          firebase emulators:exec --only firestore -- bash -lc "echo Rules loaded"
        shell: bash

  deploy:
    name: Deploy rules on main
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Install Firebase CLI
        run: npm i -g firebase-tools@13
      - name: Deploy Firestore rules
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
          FIREBASE_PROJECT_ID: ${{ secrets.FIREBASE_PROJECT_ID }}
        run: |
          if [ -z "$FIREBASE_TOKEN" ] || [ -z "$FIREBASE_PROJECT_ID" ]; then
            echo "FIREBASE_TOKEN and FIREBASE_PROJECT_ID must be set in repo secrets" >&2
            exit 1
          fi
          firebase deploy --only firestore:rules --project "$FIREBASE_PROJECT_ID" --token "$FIREBASE_TOKEN" --non-interactive